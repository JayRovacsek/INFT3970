@model INFT3970Project.Models.UserAndPasswordModel

@{
    Layout = "~/Views/Shared/_AuthenticatedLayout.cshtml";
}
<script language='javascript' type='text/javascript'>
    function check(input) {
        if (input.value != document.getElementById('password').value) {
            input.setCustomValidity('Password Must be Matching.');
        } else {
            // input is valid -- reset the error message
            input.setCustomValidity('');
        }
    }
</script>
<div class="panel panel-default">
    <div class="panel-heading">Update Password:</div>
    <div class="panel-body">
        <div class="form-group">
            @using (Html.BeginForm("UpdatePassword", "User", FormMethod.Post, new { @class = "form-group" }))
            {
                <div class="form-group row-fluid">

                    @Html.TextBoxFor(model => Model.User.Email, new { @value = Model.User.Email, @readonly = true, @class = "form-control" });
                    @Html.ValidationMessageFor(model => model.User.Email)
                </div>
                <div class="form-group row-fluid">
                    @Html.TextBoxFor(model => model.UserPassword.Password, new { @class = "form-control", @placeholder = "Password", @type = "password", @id= "password" })
                    @Html.ValidationMessageFor(model => model.UserPassword.Password)
                </div>
                <div class="form-group row-fluid">
                    @Html.TextBoxFor(model => model.UserPassword.ConfirmPassword, new { @class = "form-control", @placeholder = "Confirm Password", @type = "password",@id= "password_confirm", @oninput = "check(this)" })
                    @Html.ValidationMessageFor(model => model.UserPassword.Password)
                </div>
                <div class="form-group row-fluid">
                    <button class="btn btn-lg btn-primary" type="submit">Update Password</button>
                </div>
            }
        </div>
    </div>
</div>
